<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.noldangGapseo.dao.DestinationDao">

    <resultMap type="destination" id="desMap"></resultMap>
    <resultMap id="comMap" type="Comment"></resultMap>
    <resultMap id="imgMap" type="destinationImg"></resultMap>

    <!-- 유저들이 작성한 여행지 리스트를 불러온다. -->
    <select id="getUsersDesList" resultMap="desMap">
        SELECT d.destination_id, d.destination_name, address, d.reg_date, u.nick_name, dt.destination_type_name
        FROM destination d , `user` u , destination_type dt
        WHERE d.user_id = u.user_id
        and d.destination_type_id = dt.destination_type_id
        and not d.user_id = 1
        ORDER BY reg_date desc;
    </select>

    <!-- 놀당의 여행지 리스트를 불러온다. -->
    <select id="getAdminDesList" resultMap="desMap">
        select
        *
        from
        destination
        where
        user_id = 1
        order by reg_date desc
    </select>

    <!-- 여행지의 상세항목을 불러온다. -->
    <select id="getDes" resultMap="desMap" parameterType="Integer">
        SELECT  d.destination_id, d.destination_name, d.contents,
                d.phone, d.address, dt.destination_type_name,
                u.nick_name, l.likes_cnt, d.latitude,
                d.longitude, d.reg_date, d.update_date
        FROM    destination d , destination_type dt, `user` u ,
                (
                SELECT COUNT(l.user_id) likes_cnt
                FROM likes l
                WHERE  l.destination_id = #{desId}
                ) l
        WHERE   d.destination_id = #{desId}
        and     d.destination_type_id  = dt.destination_type_id
        and     d.user_id = u.user_id;

    </select>
    
    <select id="get4Des" resultMap="desMap">
        select 		d.destination_id , d.destination_name , di.img thumbNailImg
        from 		destination d , destination_img di
        WHERE 		user_id = 1
        and 		d.destination_id = di.destination_id
        order by 	rand() limit 4;
    </select>

    <!-- 놀당 여행지의 댓글을 불러온다. -->
    <select id="getNoldangCommentList" resultMap="comMap" parameterType="Integer">
        SELECT      dc.comment_id, dc.contents , u.nick_name
        FROM        destination_comment dc , `user` u
        where       dc.destination_id = #{desId}
        and         dc.user_id = u.user_id
        order by    dc.reg_date desc;
    </select>

    <!-- 유저가 작성한 여행지의 댓글을 불러온다. -->
    <select id="getUserCommentList" resultMap="comMap" parameterType="Integer">
        SELECT      ndc.new_destination_comment_id comment_id, ndc.contents, u.nick_name
        FROM        new_destination_comment ndc, `user` u
        where       ndc.destination_id = #{desId}
        and         ndc.user_id = u.user_id
        order by    ndc.reg_date desc;
    </select>

    <!-- 이미지 리스트를 불러온다. -->
    <select id="getImg" resultMap="imgMap" parameterType="Integer">
        SELECT 	di.destination_img_id, di.img
        FROM 	destination_img di
        WHERE	di.destination_id = #{desId};
    </select>

    <!-- 유저가 작성한 여행지 리스트를 불러온다. -->
    <select id="getUserDesList" resultMap="desMap" parameterType="Integer">
        SELECT  d.destination_id, d.destination_name, dt.destination_type_name,
                lic.likes_cnt, com.comments_cnt, di.img thumb_nail_img
        FROM    destination_type dt ,destination d
        join
                (
                SELECT      d2.destination_id, COUNT(l.destination_id) likes_cnt
                FROM        destination d2
                left join   likes l
                on          d2.destination_id = l.destination_id
                WHERE       d2.user_id = #{userId}
                group by    d2.destination_id
                ) as lic
        on      d.destination_id = lic.destination_id
        join
                (
                SELECT      COUNT(ndc.destination_id) comments_cnt , d3.destination_id
                FROM        destination d3
                left join   new_destination_comment ndc
                ON          d3.destination_id = ndc.destination_id
                WHERE       d3.user_id = #{userId}
                GROUP by    d3.destination_id
                ) as com
        on      d.destination_id = com.destination_id
        left join   destination_img di ON di.destination_id = d.destination_id
        WHere       1=1
        and         d.user_id = #{userId}
        and         d.destination_type_id = dt.destination_type_id
        group by    d.destination_id
        order by    d.reg_date desc;
    </select>

    <!-- 좋아요 추가 -->
    <insert id="addLike">
        INSERT  into likes
                (destination_id, user_id)
        values  (#{desId}, #{userId});
    </insert>

    <!-- 좋아요 삭제 -->
    <delete id="deleteLike">
        DELETE
        FROM    likes
        WHERE   destination_id = #{desId}
        and     user_id = #{userId};
    </delete>

</mapper>